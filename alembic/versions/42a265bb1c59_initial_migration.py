"""initial migration

Revision ID: 42a265bb1c59
Revises: 
Create Date: 2025-09-16 14:45:25.962621

"""
from typing import Sequence, Union
from datetime import datetime, timezone

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '42a265bb1c59'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('global_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('message_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('message_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=False),
    sa.Column('has_embeds', sa.Boolean(), nullable=False),
    sa.Column('character_count', sa.Integer(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_activity_channel_id'), 'message_activity', ['channel_id'], unique=False)
    op.create_index(op.f('ix_message_activity_message_id'), 'message_activity', ['message_id'], unique=True)
    op.create_index(op.f('ix_message_activity_sent_at'), 'message_activity', ['sent_at'], unique=False)
    op.create_index(op.f('ix_message_activity_user_id'), 'message_activity', ['user_id'], unique=False)
    op.create_table('presence_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('previous_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('activity_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('activity_name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('changed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_presence_activity_changed_at'), 'presence_activity', ['changed_at'], unique=False)
    op.create_index(op.f('ix_presence_activity_user_id'), 'presence_activity', ['user_id'], unique=False)
    op.create_table('user_name_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('old_username', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('new_username', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('old_display_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('new_display_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('old_global_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('new_global_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('change_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_name_history_changed_at'), 'user_name_history', ['changed_at'], unique=False)
    op.create_index(op.f('ix_user_name_history_user_id'), 'user_name_history', ['user_id'], unique=False)
    op.create_table('voice_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('was_muted', sa.Boolean(), nullable=False),
    sa.Column('was_deafened', sa.Boolean(), nullable=False),
    sa.Column('was_streaming', sa.Boolean(), nullable=False),
    sa.Column('was_video', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_voice_activity_channel_id'), 'voice_activity', ['channel_id'], unique=False)
    op.create_index(op.f('ix_voice_activity_joined_at'), 'voice_activity', ['joined_at'], unique=False)
    op.create_index(op.f('ix_voice_activity_user_id'), 'voice_activity', ['user_id'], unique=False)
    # ### end Alembic commands ###
    
    # Insert test data
    _insert_test_data()


def _insert_test_data() -> None:
    """Insert test data for development and testing purposes."""
    # Get connection for raw SQL execution
    connection = op.get_bind()
    
    # Test data timestamps
    now = datetime.now(timezone.utc)
    
    # Insert test users
    users_data = [
        {
            'user_id': 123456789012345678,  # Example Discord user ID
            'username': 'testuser1',
            'display_name': 'Test User One',
            'global_name': 'TestUser1',
            'first_seen': now,
            'last_updated': now
        },
        {
            'user_id': 987654321098765432,  # Example Discord user ID
            'username': 'testuser2',
            'display_name': 'Test User Two',
            'global_name': 'TestUser2',
            'first_seen': now,
            'last_updated': now
        }
    ]
    
    for user_data in users_data:
        connection.execute(
            sa.text("""
                INSERT INTO users (user_id, username, display_name, global_name, first_seen, last_updated)
                VALUES (:user_id, :username, :display_name, :global_name, :first_seen, :last_updated)
            """),
            user_data
        )
    
    # Insert test message activity
    message_data = [
        {
            'user_id': 123456789012345678,
            'channel_id': 111111111111111111,
            'message_id': 222222222222222222,
            'message_type': 'default',
            'has_attachments': False,
            'has_embeds': False,
            'character_count': 25,
            'sent_at': now
        },
        {
            'user_id': 987654321098765432,
            'channel_id': 111111111111111111,
            'message_id': 333333333333333333,
            'message_type': 'reply',
            'has_attachments': True,
            'has_embeds': False,
            'character_count': 42,
            'sent_at': now
        }
    ]
    
    for msg_data in message_data:
        connection.execute(
            sa.text("""
                INSERT INTO message_activity (user_id, channel_id, message_id, message_type, 
                                            has_attachments, has_embeds, character_count, sent_at)
                VALUES (:user_id, :channel_id, :message_id, :message_type, 
                       :has_attachments, :has_embeds, :character_count, :sent_at)
            """),
            msg_data
        )
    
    # Insert test presence activity
    presence_data = [
        {
            'user_id': 123456789012345678,
            'status': 'online',
            'previous_status': 'offline',
            'activity_type': 'playing',
            'activity_name': 'Discord Bot Development',
            'changed_at': now,
            'duration_seconds': 3600
        },
        {
            'user_id': 987654321098765432,
            'status': 'idle',
            'previous_status': 'online',
            'activity_type': 'listening',
            'activity_name': 'Spotify',
            'changed_at': now,
            'duration_seconds': 1800
        }
    ]
    
    for presence in presence_data:
        connection.execute(
            sa.text("""
                INSERT INTO presence_activity (user_id, status, previous_status, activity_type, 
                                             activity_name, changed_at, duration_seconds)
                VALUES (:user_id, :status, :previous_status, :activity_type, 
                       :activity_name, :changed_at, :duration_seconds)
            """),
            presence
        )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_voice_activity_user_id'), table_name='voice_activity')
    op.drop_index(op.f('ix_voice_activity_joined_at'), table_name='voice_activity')
    op.drop_index(op.f('ix_voice_activity_channel_id'), table_name='voice_activity')
    op.drop_table('voice_activity')
    op.drop_index(op.f('ix_user_name_history_user_id'), table_name='user_name_history')
    op.drop_index(op.f('ix_user_name_history_changed_at'), table_name='user_name_history')
    op.drop_table('user_name_history')
    op.drop_index(op.f('ix_presence_activity_user_id'), table_name='presence_activity')
    op.drop_index(op.f('ix_presence_activity_changed_at'), table_name='presence_activity')
    op.drop_table('presence_activity')
    op.drop_index(op.f('ix_message_activity_user_id'), table_name='message_activity')
    op.drop_index(op.f('ix_message_activity_sent_at'), table_name='message_activity')
    op.drop_index(op.f('ix_message_activity_message_id'), table_name='message_activity')
    op.drop_index(op.f('ix_message_activity_channel_id'), table_name='message_activity')
    op.drop_table('message_activity')
    op.drop_table('users')
    # ### end Alembic commands ###
