"""initial migration

Revision ID: 2d09aac4b364
Revises: 
Create Date: 2025-09-18 13:27:25.875390

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '2d09aac4b364'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('activity_type', sa.Enum('COMPETING', 'CUSTOM', 'LISTENING', 'PLAYING', 'STREAMING', 'WATCHING', name='activity_type_enum'), nullable=False),
    sa.Column('activity_name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_log_started_at'), 'activity_log', ['started_at'], unique=False)
    op.create_index(op.f('ix_activity_log_user_id'), 'activity_log', ['user_id'], unique=False)
    op.create_table('custom_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('status_text', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('emoji', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('set_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_custom_status_set_at'), 'custom_status', ['set_at'], unique=False)
    op.create_index(op.f('ix_custom_status_user_id'), 'custom_status', ['user_id'], unique=False)
    op.create_table('message_activity',
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('message_type', sa.Enum('DEFAULT', 'RECIPIENT_ADD', 'RECIPIENT_REMOVE', 'CALL', 'CHANNEL_NAME_CHANGE', 'CHANNEL_ICON_CHANGE', 'CHANNEL_PINNED_MESSAGE', 'USER_JOIN', 'GUILD_BOOST', 'GUILD_BOOST_TIER_1', 'GUILD_BOOST_TIER_2', 'GUILD_BOOST_TIER_3', 'CHANNEL_FOLLOW_ADD', 'GUILD_DISCOVERY_DISQUALIFIED', 'GUILD_DISCOVERY_REQUALIFIED', 'GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING', 'GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING', 'THREAD_CREATED', 'REPLY', 'CHAT_INPUT_COMMAND', 'THREAD_STARTER_MESSAGE', 'GUILD_INVITE_REMINDER', 'CONTEXT_MENU_COMMAND', 'ROLE_SUBSCRIPTION_PURCHASE', 'INTERACTION_PREMIUM_UPSELL', 'STAGE_START', 'STAGE_END', 'STAGE_SPEAKER', 'STAGE_RAISE_HAND', 'STAGE_TOPIC', 'GUILD_APPLICATION_PREMIUM_SUBSCRIPTION', 'GUILD_INCIDENT_ALERT_MODE_ENABLED', 'GUILD_INCIDENT_ALERT_MODE_DISABLED', 'GUILD_INCIDENT_REPORT_RAID', 'GUILD_INCIDENT_REPORT_FALSE_ALARM', 'PURCHASE_NOTIFICATION', 'POLL_RESULT', name='message_type_enum'), nullable=False),
    sa.Column('has_attachments', sa.Boolean(), nullable=False),
    sa.Column('has_embeds', sa.Boolean(), nullable=False),
    sa.Column('character_count', sa.Integer(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_index(op.f('ix_message_activity_channel_id'), 'message_activity', ['channel_id'], unique=False)
    op.create_index(op.f('ix_message_activity_sent_at'), 'message_activity', ['sent_at'], unique=False)
    op.create_index(op.f('ix_message_activity_user_id'), 'message_activity', ['user_id'], unique=False)
    op.create_table('presence_status_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('status_type', sa.Enum('ONLINE', 'IDLE', 'DND', 'OFFLINE', 'STREAMING', name='discord_status_enum'), nullable=False),
    sa.Column('set_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_presence_status_log_set_at'), 'presence_status_log', ['set_at'], unique=False)
    op.create_index(op.f('ix_presence_status_log_status_type'), 'presence_status_log', ['status_type'], unique=False)
    op.create_index(op.f('ix_presence_status_log_user_id'), 'presence_status_log', ['user_id'], unique=False)
    op.create_table('user_names_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('global_name', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('effective_from', sa.DateTime(timezone=True), nullable=False),
    sa.Column('effective_until', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_names_history_effective_from'), 'user_names_history', ['effective_from'], unique=False)
    op.create_index(op.f('ix_user_names_history_effective_until'), 'user_names_history', ['effective_until'], unique=False)
    op.create_index(op.f('ix_user_names_history_user_id'), 'user_names_history', ['user_id'], unique=False)
    op.create_table('voice_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_voice_sessions_channel_id'), 'voice_sessions', ['channel_id'], unique=False)
    op.create_index(op.f('ix_voice_sessions_joined_at'), 'voice_sessions', ['joined_at'], unique=False)
    op.create_index(op.f('ix_voice_sessions_user_id'), 'voice_sessions', ['user_id'], unique=False)
    op.create_table('voice_state_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('state_type', sa.Enum('DEAF', 'MUTE', 'SELF_DEAF', 'SELF_MUTE', 'SELF_STREAM', 'SELF_VIDEO', name='voice_state_type_enum'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['voice_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_voice_state_log_session_id'), 'voice_state_log', ['session_id'], unique=False)
    op.create_index(op.f('ix_voice_state_log_started_at'), 'voice_state_log', ['started_at'], unique=False)
    op.create_index(op.f('ix_voice_state_log_state_type'), 'voice_state_log', ['state_type'], unique=False)
    
    # Custom composite indexes from models
    op.create_index('idx_message_activity_user_sent', 'message_activity', ['user_id', 'sent_at'], unique=False)
    op.create_index('idx_voice_sessions_user_joined', 'voice_sessions', ['user_id', 'joined_at'], unique=False)
    op.create_index('idx_voice_state_log_session_started', 'voice_state_log', ['session_id', 'started_at'], unique=False)
    op.create_index('idx_voice_state_log_state_type_started', 'voice_state_log', ['state_type', 'started_at'], unique=False)
    op.create_index('idx_presence_status_log_user_set', 'presence_status_log', ['user_id', 'set_at'], unique=False)
    op.create_index('idx_presence_status_log_status_type_set', 'presence_status_log', ['status_type', 'set_at'], unique=False)
    op.create_index('idx_presence_status_log_cleared', 'presence_status_log', ['user_id', 'changed_at'], unique=False)
    op.create_index('idx_activity_log_user_started', 'activity_log', ['user_id', 'started_at'], unique=False)
    op.create_index('idx_custom_status_user_set', 'custom_status', ['user_id', 'set_at'], unique=False)
    op.create_index('idx_user_names_current', 'user_names_history', ['user_id', 'effective_until'], unique=False)
    op.create_index('idx_user_names_effective_from', 'user_names_history', ['user_id', 'effective_from'], unique=False)
    
    # Unique constraints for current/active records
    op.create_index('idx_user_names_unique_current', 'user_names_history', ['user_id'], unique=True,
                   postgresql_where=sa.text('effective_until IS NULL'))
    op.create_index('idx_custom_status_unique_content', 'custom_status', ['user_id', 'status_text', 'emoji'], unique=True)
    
    # Check constraints for data integrity
    op.create_check_constraint('ck_activity_type_valid', 'activity_log',
        "activity_type IN ('COMPETING', 'CUSTOM', 'LISTENING', 'PLAYING', 'STREAMING', 'WATCHING')")
    
    op.create_check_constraint('ck_message_type_valid', 'message_activity',
        "message_type IN ('DEFAULT', 'RECIPIENT_ADD', 'RECIPIENT_REMOVE', 'CALL', "
        "'CHANNEL_NAME_CHANGE', 'CHANNEL_ICON_CHANGE', 'CHANNEL_PINNED_MESSAGE', 'USER_JOIN', "
        "'GUILD_BOOST', 'GUILD_BOOST_TIER_1', 'GUILD_BOOST_TIER_2', 'GUILD_BOOST_TIER_3', "
        "'CHANNEL_FOLLOW_ADD', 'GUILD_DISCOVERY_DISQUALIFIED', 'GUILD_DISCOVERY_REQUALIFIED', "
        "'GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING', 'GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING', "
        "'THREAD_CREATED', 'REPLY', 'CHAT_INPUT_COMMAND', 'THREAD_STARTER_MESSAGE', "
        "'GUILD_INVITE_REMINDER', 'CONTEXT_MENU_COMMAND', 'ROLE_SUBSCRIPTION_PURCHASE', "
        "'INTERACTION_PREMIUM_UPSELL', 'STAGE_START', 'STAGE_END', 'STAGE_SPEAKER', "
        "'STAGE_RAISE_HAND', 'STAGE_TOPIC', 'GUILD_APPLICATION_PREMIUM_SUBSCRIPTION', "
        "'GUILD_INCIDENT_ALERT_MODE_ENABLED', 'GUILD_INCIDENT_ALERT_MODE_DISABLED', "
        "'GUILD_INCIDENT_REPORT_RAID', 'GUILD_INCIDENT_REPORT_FALSE_ALARM', "
        "'PURCHASE_NOTIFICATION', 'POLL_RESULT')")
    
    op.create_check_constraint('ck_user_names_history_valid_period', 'user_names_history',
        "(effective_until IS NULL AND effective_from IS NOT NULL) OR "
        "(effective_until IS NOT NULL AND effective_until > effective_from)")
    
    op.create_check_constraint('ck_presence_status_enum_valid', 'presence_status_log',
        "status_type IN ('ONLINE', 'IDLE', 'DND', 'OFFLINE', 'STREAMING')")
    
    op.create_check_constraint('ck_voice_state_type_valid', 'voice_state_log',
        "state_type IN ('DEAF', 'MUTE', 'SELF_DEAF', 'SELF_MUTE', 'SELF_STREAM', 'SELF_VIDEO')")
    
    # Time period validation constraints
    op.create_check_constraint('ck_voice_state_log_valid_period', 'voice_state_log',
        "(ended_at IS NULL) OR (ended_at >= started_at)")
    
    op.create_check_constraint('ck_voice_session_valid_period', 'voice_sessions',
        "(left_at IS NULL) OR (left_at >= joined_at)")
    
    op.create_check_constraint('ck_activity_log_valid_period', 'activity_log',
        "(ended_at IS NULL) OR (ended_at >= started_at)")
    
    op.create_check_constraint('ck_presence_status_valid_period', 'presence_status_log',
        "(changed_at IS NULL) OR (changed_at >= set_at)")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop check constraints first
    op.drop_constraint('ck_presence_status_valid_period', 'presence_status_log', type_='check')
    op.drop_constraint('ck_activity_log_valid_period', 'activity_log', type_='check')
    op.drop_constraint('ck_voice_session_valid_period', 'voice_sessions', type_='check')
    op.drop_constraint('ck_voice_state_log_valid_period', 'voice_state_log', type_='check')
    op.drop_constraint('ck_voice_state_type_valid', 'voice_state_log', type_='check')
    op.drop_constraint('ck_presence_status_enum_valid', 'presence_status_log', type_='check')
    op.drop_constraint('ck_user_names_history_valid_period', 'user_names_history', type_='check')
    op.drop_constraint('ck_message_type_valid', 'message_activity', type_='check')
    op.drop_constraint('ck_activity_type_valid', 'activity_log', type_='check')
    
    # Drop custom indexes
    op.drop_index('idx_custom_status_unique_content', table_name='custom_status')
    op.drop_index('idx_user_names_unique_current', table_name='user_names_history')
    op.drop_index('idx_user_names_effective_from', table_name='user_names_history')
    op.drop_index('idx_user_names_current', table_name='user_names_history')
    op.drop_index('idx_custom_status_user_set', table_name='custom_status')
    op.drop_index('idx_activity_log_user_started', table_name='activity_log')
    op.drop_index('idx_presence_status_log_cleared', table_name='presence_status_log')
    op.drop_index('idx_presence_status_log_status_type_set', table_name='presence_status_log')
    op.drop_index('idx_presence_status_log_user_set', table_name='presence_status_log')
    op.drop_index('idx_voice_state_log_state_type_started', table_name='voice_state_log')
    op.drop_index('idx_voice_state_log_session_started', table_name='voice_state_log')
    op.drop_index('idx_voice_sessions_user_joined', table_name='voice_sessions')
    op.drop_index('idx_message_activity_user_sent', table_name='message_activity')
    
    # Drop auto-generated indexes and tables
    op.drop_index(op.f('ix_voice_state_log_state_type'), table_name='voice_state_log')
    op.drop_index(op.f('ix_voice_state_log_started_at'), table_name='voice_state_log')
    op.drop_index(op.f('ix_voice_state_log_session_id'), table_name='voice_state_log')
    op.drop_table('voice_state_log')
    op.drop_index(op.f('ix_voice_sessions_user_id'), table_name='voice_sessions')
    op.drop_index(op.f('ix_voice_sessions_joined_at'), table_name='voice_sessions')
    op.drop_index(op.f('ix_voice_sessions_channel_id'), table_name='voice_sessions')
    op.drop_table('voice_sessions')
    op.drop_index(op.f('ix_user_names_history_user_id'), table_name='user_names_history')
    op.drop_index(op.f('ix_user_names_history_effective_until'), table_name='user_names_history')
    op.drop_index(op.f('ix_user_names_history_effective_from'), table_name='user_names_history')
    op.drop_table('user_names_history')
    op.drop_index(op.f('ix_presence_status_log_user_id'), table_name='presence_status_log')
    op.drop_index(op.f('ix_presence_status_log_status_type'), table_name='presence_status_log')
    op.drop_index(op.f('ix_presence_status_log_set_at'), table_name='presence_status_log')
    op.drop_table('presence_status_log')
    op.drop_index(op.f('ix_message_activity_user_id'), table_name='message_activity')
    op.drop_index(op.f('ix_message_activity_sent_at'), table_name='message_activity')
    op.drop_index(op.f('ix_message_activity_channel_id'), table_name='message_activity')
    op.drop_table('message_activity')
    op.drop_index(op.f('ix_custom_status_user_id'), table_name='custom_status')
    op.drop_index(op.f('ix_custom_status_set_at'), table_name='custom_status')
    op.drop_table('custom_status')
    op.drop_index(op.f('ix_activity_log_user_id'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_started_at'), table_name='activity_log')
    op.drop_table('activity_log')
    op.drop_table('users')
    # ### end Alembic commands ###
